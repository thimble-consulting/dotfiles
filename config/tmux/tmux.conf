# force a reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf

# choose window shortcut
bind C new-session
bind w choose-session

# kill shortcuts
bind W kill-window
bind K kill-session

# vim-like splitting
bind s split-window -v -p 25
bind v split-window -h -p 33

# vim-like pane resizing
bind -r < resize-pane -L 20
bind -r > resize-pane -R 20
bind -r - resize-pane -D 20
bind -r = resize-pane -U 20

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n 'C-h' if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n 'C-j' if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n 'C-k' if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n 'C-l' if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# vim speed issue
set-option -s escape-time 10

# vim-like motion for copy mode
setw -g mode-keys vi
set -g status-keys vi
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Enable copying to system pasteboard
is_linux_wsl='echo "$(uname)" | grep "Linux"'
is_osx='echo "$(uname)" | grep "Darwin"'

# Setup 'v' to begin selection as in Vim
# bind-key -T vi-copy v begin-selection
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
# bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# if-shell "$is_linux_wsl" \
#     'bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "/mnt/c/Windows/System32/clip.exe"'
if-shell "$is_osx" \
    'bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy" \; send-keys Enter'

# Update default binding of `Enter` to also use copy-pipe
#unbind-key -Tcopy-mode-vi Enter
#if-shell "$is_linux_wsl" \
#    'bind-key -Tcopy-mode-vi Enter send -X copy-pipe "/mnt/c/Windows/System32/clip.exe"'
#if-shell "$is_osx" \
#    'bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"'

# rotate with o
bind o rotate-window -D
bind O rotate-window -U

# pane maximize/restore
bind M new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.1 \; select-window -t tmux-zoom
bind m last-window \; swap-pane -s tmux-zoom.1 \; kill-window -t tmux-zoom

# window numbering (fixes tmuxinator)
set-option -g base-index 1
set-window-option -g pane-base-index 1

# theme
set -g default-terminal "screen-256color"
set -g message-style bg=black,fg=green
# set -g message-fg green
# Material Light
# set -g status-bg colour254 # old: color08
# Material Dark
set -g status-bg colour234
# Material Light - replace colour198 with colour162
# set -g status-fg colour162 # old: white
set -g status-fg colour198 # old: white
set -g status-interval 1
set -g status-left-length 30
set -g status-left ' #[fg=colour198](#S) ' # old: green
set -g status-right-length 100
set -g status-right "#[fg=$TMUX_SHELL_COLOR]$sHost#[default]#[fg=blue]#(current_song) #[fg=green]%a %h %d #[fg=colour198]%I:%M:%S %p #[fg=red]#(battery Discharging)#[fg=green]#(battery Charging)"
# set -g status-utf8 on
set-window-option -g window-status-format "#I:#W#F"
set-window-option -g window-status-current-format " #[bold]#I:#W#F "
# Leave this one 162 when switching to dark
set-window-option -g window-status-current-style bg=colour162,fg=white
# set-window-option -g window-status-current-fg white

# window title
set-option -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W'
set-window-option -g automatic-rename on

set -g history-limit 500000

# rbenv + tmuxinator fix
set-environment -gu RBENV_VERSION

# detect URLs
bind u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# fix vim <S-Left> in command mode
# http://superuser.com/q/401926
set-window-option -g xterm-keys on

# support for: vim-tmux-clipboard
set -g focus-events on

if-shell "$is_osx" \
    'set -g mouse on'
unbind -T copy-mode-vi MouseDragEnd1Pane
#if-shell "$is_osx" \
#    'set -g mouse-resize-pane on'
#if-shell "$is_osx" \
#    'set -g mouse-select-pane on'
#if-shell "$is_osx" \
#    'set -g mouse-select-window on'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
