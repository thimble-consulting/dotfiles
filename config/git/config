[user]
    name = Joshua Balloch
    email = joshuaballoch@gmail.com

[github]
    user = joshuaballoch

[core]
    excludesfile = /Users/joshuaballoch/.gitignore_global
    editor = nvim
    filemode = false
    trustctime = false
    autocrlf = input
    untrackedCache = true
    pager = delta
    ignorecase = false

[credential]
    helper = osxkeychain

[init]
    defaultbranch = main

[alias]
    st = status
    sts = status -sb
    stl = ls-files -m -o --exclude-standard
    ci = commit
    br = branch
    co = checkout
    cr = clone --recursive
    df = diff --word-diff
    diffstat = "!f() { if [ $# -eq 0 ]; then git show --shortstat HEAD | tail -1; else git show --shortstat $1 | tail -1; fi; }; f"
    ds = -c delta.side-by-side=true diff
    unstage = reset --hard HEAD
    ag = !sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs git add --verbose' -
    l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    ld = "!sh -c \"git log --since '${1:-1} days ago' --oneline --author $(git config user.email)\" -"
    ll = log --pretty=oneline --graph --abbrev-commit
    lm = log --pretty=format:'* %s (%h)'
    lg = log -p
    follow = log -p --follow --no-merges
    g = grep --break --heading --line-number
    amend = commit --amend --reuse-message=HEAD
    contrib = shortlog --summary --numbered
    heroku-prod-deployed-commit=!sh -c 'heroku releases -r production | grep Deploy | tr -s \" \" | cut -d \" \" -f 3 | head -n 1' -
    remote-repo-url=!sh -c 'git config --get remote.origin.url | sed -e 's/git@//g' | sed -e 's/\\.git//g' | sed -e 's=\\:=\\/=g'' | xargs -I url echo 'https://'url
    latest-master-sha=!sh -c 'git fetch && git log origin/master --oneline | head -1 | cut -d\" \" -f1' -
    compare-heroku=!sh -c 'open $(git remote-repo-url)/compare/$(git heroku-prod-deployed-commit)...$(git latest-master-sha)' -
    cleanup = "!git branch --merged master | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d"
    lc = "!git rev-parse HEAD | tr -d '\n'"
    lcc = "!git rev-parse HEAD | tr -d '\n' | pbcopy"

    # List files ignored by .gitignore and friends
    show-ignored = "! git clean -ndX | perl -pe 's/Would remove/Ignored:/'"
    sshort = "!f() { git show --shortstat \"${1:-HEAD}\" | awk \"/files? changed/ { gsub(/,/, \\\"\\\", \\$4); gsub(/,/, \\\"\\\", \\$6); print \\\"\\033[32m+\\\" \\$4 \\\" \\033[31m-\\\" \\$6 \\\"\\033[0m\\\" }\"; }; f"


[color]
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow # bold
    frag = magenta # bold
    old = red # bold
    new = green #bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[grep]
    lineNumber = true

[help]
    autocorrect = 1

[diff]
    indentHeuristic = true
    colorMoved = default
    autocorrect = 1


[difftool]
    prompt = false

[merge]
    conflictstyle = diff3
    defaultToUpstream = true
    prompt = false

[mergetool]
    prompt = false

[mergetool "vscode"]
    cmd = code --wait $MERGED
    trustExitCode = true
    prompt = false

[push]
    default = current

[fetch]
    prune = true

[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
[pull]
    rebase = false
    ff = only
[rerere]
    enabled = true
[rebase]
    autoStash = true
